#!/usr/bin/env bash

# This script generates a gen-sysroot for the DPDK build system. It is intended to
# be run on a system with the same architecture as the target system. The
# gen-sysroot is generated by copying the necessary files from the target system
# into a directory structure that can be used by the DPDK build system.

# The script takes a single argument, which is the path to the directory where
# the gen-sysroot should be generated. If the directory does not exist, it will be
# created. If the directory is not empty, the script will exit with an error.

set -euxo pipefail

declare script_dir
script_dir="$(readlink --canonicalize-existing "$(dirname "$(readlink --canonicalize-existing "${0}")")")"
declare -r script_dir

echo "${script_dir}"

die() {
  >&2 printf -- "%s" "${*}"
  exit 1
}

pushd "${script_dir}"
declare sysroot_dir
sysroot_dir="$(readlink --canonicalize-existing "${script_dir}/..")/sysroot"
declare -r sysroot_dir

declare -r regen_sysroot="${1:-""}"

if [[ "${regen_sysroot}" = "--regen-sysroot" && -d "${sysroot_dir}" ]]; then
  printf -- "--regen-sysroot flag accepted, removing directory %s\n" "${sysroot_dir}"
  rm -fr "${sysroot_dir}"
fi

mkdir "${sysroot_dir}" \
  || { rmdir "${sysroot_dir}" && mkdir "${sysroot_dir}"; } \
  || die "${sysroot_dir} already exists and is not empty"

docker build --pull --tag dpdk-sysroot --file "${script_dir}/Dockerfile" "${script_dir}"
# clean up any prior sysroot
docker rm dpdk-sysroot || true
docker create --name dpdk-sysroot dpdk-sysroot true

docker export dpdk-sysroot | tar xf - -C "${sysroot_dir}"